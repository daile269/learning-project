2025-04-19 10:50:05 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:05 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2450256f MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2450256f MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5345dfe8 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@478967eb MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a1dda83 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7f2b39a MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7a358613 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@760f1081 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4b4814d0] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4b4814d0) [was null] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@267891bf] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3a109ff7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@111a7973] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4b4814d0] MDC:[traceId=, spanId=]
2025-04-19 10:50:08 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4b4814d0] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2295566b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@174e1b99) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53a09566) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14af73e1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24068086) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32513dea) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d0e703a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f77e065) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f655dbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac1b6c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fb82f73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5896b9f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ad8d36f) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3355b8ff MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5345dfe8` MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3400d6fa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30a62a5b] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@9cb927e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@8585cdd, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.18189413638868274247, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7748, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.18189413638868274247, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1325f967, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@912747d] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@cea67b1] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5d98364c] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@297dff3a] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30437e9c] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e057637] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6f4f2cc0] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@35744f8] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@75c0cd39] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5065bdac] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e9dcdd3] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@34e68840] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@62615be] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7ca29311] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5d20195b] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6705b763] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1ef5cde4] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@f837c11] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42a97053] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc4a9b0] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33089426] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129c322f] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bbef3c7] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2314cd97] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@10830d50] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e3dc24f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ea8ff31] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6f4f2cc0 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1d40f597] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20960b51] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2078bf0a] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a947424] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d6ac] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@103e9972] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6705b763 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1bbef3c7 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@35995029 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6 MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@94aeba1] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-19 10:50:09 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3400d6fa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@f4c3e9] MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@781bd9dd MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 27a0abb0-fd6d-4ad0-892f-a8908350db09 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-19 10:50:10 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-19 10:50:10 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ab89c8a MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@465114657 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 10:57:02 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 963760465 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4124f4f3 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@639a8bbf MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1973859180 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 657405544 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-19 10:57:03 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67d2cc32 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@599eefd7 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1334080165 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 178582791 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-19 11:00:15 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66d9bfac MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10039b2a MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@190414012 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 11:02:05 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@23d32fb6 MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [2] MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@45789a83 MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$7SHtG3W5xerdfZJiEg.xnucDFlBNtdAPDJJCj/UIjC39mUEqaUYBy, role=ROLE_USER, id=2, email=s@gmail.com, username=test123} MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-19 11:02:06 [http-nio-8013-exec-2] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$7SHtG3W5xerdfZJiEg.xnucDFlBNtdAPDJJCj/UIjC39mUEqaUYBy, role=ROLE_USER, id=2, email=s@gmail.com, username=test123} MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fe25e9f MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@270053672 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [2] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 2 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#2] : 628304400 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [s@gmail.com] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$7SHtG3W5xerdfZJiEg.xnucDFlBNtdAPDJJCj/UIjC39mUEqaUYBy] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_USER] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#2 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70374e67 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72f569bb MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@955691750 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [2] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 2 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#2] : 1533349226 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [s@gmail.com] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$7SHtG3W5xerdfZJiEg.xnucDFlBNtdAPDJJCj/UIjC39mUEqaUYBy] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_USER] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#2 MDC:[traceId=, spanId=]
2025-04-19 11:02:23 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5689f562 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d563c2e MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1388078542 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [2] MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 2 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#2] : 1930455891 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [s@gmail.com] MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$7SHtG3W5xerdfZJiEg.xnucDFlBNtdAPDJJCj/UIjC39mUEqaUYBy] MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_USER] MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [test123] MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#2 MDC:[traceId=, spanId=]
2025-04-19 11:02:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42b3f2ea MDC:[traceId=, spanId=]
2025-04-19 11:04:14 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-19 11:04:14 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@65a86df9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@f4c3e9] MDC:[traceId=, spanId=]
2025-04-19 11:04:14 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-19 11:04:14 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
