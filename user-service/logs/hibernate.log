2025-04-18 13:38:17 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:17 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18a98913 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18a98913 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@18a98913 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7dbae40 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7dbae40 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@34f7b44f MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@34f7b44f MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5403907 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5403907 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5175d9ad MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5175d9ad MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5175d9ad MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@b06d46d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b06d46d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@b06d46d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@25a5c8e MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@25a5c8e MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@656c5c3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7911cc15 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7911cc15 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4409cae6 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@14e750c5 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@242ff747 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@242ff747 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@242ff747 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5329f6b3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5329f6b3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5329f6b3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@597d48ca MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@597d48ca MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@597d48ca MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@77324a58 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@77324a58 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@77324a58 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2c7c0e36 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2c7c0e36 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2c7c0e36 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@307cf964 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@307cf964 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@374ccb9 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@374ccb9 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@66713605 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@66713605 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@66713605 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2ab09943 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d50f2a8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d50f2a8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5864e8bf MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@37ca3ca8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@37ca3ca8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@37ca3ca8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@191ec193 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6321a5aa MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1c7f9861 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7a36c83a MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7a36c83a MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@154b8cb6 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@154b8cb6 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7b297740 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b7554d4 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57ce2898 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1ea930eb MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2e0ad709 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1fe8f5e8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@39449465 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@39449465 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e3dd5ce MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e3dd5ce MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@16f7f59f MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@16f7f59f MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4ee8051c MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4ee8051c MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@53125718 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@53125718 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53016b11 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7af327e3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@743d0d44 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@743d0d44 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@35563e4c MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6dd79214 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ef86c72 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@123307c4 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@123307c4 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1693ff90 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47058864 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@ad3f70a MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@ad3f70a MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@54ccb3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@54ccb3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@9b2dc56 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@9b2dc56 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@9b2dc56 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@621f23ac MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@621f23ac MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@621f23ac MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7761e342 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@51f68849 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4eb9ae4d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4eb9ae4d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5520f675 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5520f675 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5520f675 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2d237460 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@48f2054d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b3a01d8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b3a01d8 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@19fbc594 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@19fbc594 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@19fbc594 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2f4d32bf MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2f4d32bf MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@774d8276 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@774d8276 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6ce26986 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6ce26986 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2bf2d6eb MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2bf2d6eb MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6d6cd1e0 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6d6cd1e0 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@76a9a009 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@9785903 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@55d8c2c4 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@55d8c2c4 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2315052d MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@634e1b39 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@67d8faec MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@751d7425 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7eaa2bc6 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6dae70f9 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4d81e83a MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@53a301f3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7cf8f45a MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c59a0f7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c59a0f7) [was null] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@70fede7d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@36510e73] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2c47a053] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c59a0f7] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5c59a0f7] MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f8900b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e7e455d) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33e8e146) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f4d38f9) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18463720) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64eeddd8) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10f8e2d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048ac4) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f525e13) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d404a3c) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@af9dd34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48692405) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@151659dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a58e0e9) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e8c84eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f44d033) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283bb8b7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e95af1) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3c8fe8ad MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2315052d` MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 13:38:19 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2adc1e84] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a99fa07] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@591a4d25, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4bfe83d, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.12688723451199206802, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13900, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.12688723451199206802, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5906ebfb, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6c8d8b60] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@79fcd194] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@73d8c8d7] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40fee459] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bcd9ed6] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ffa0f38] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13cc31df] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24a7d3d3] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6c225adb] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7bfcc108] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@41581c3f] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1885dc2b] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a3bf37c] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@328e50eb] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e614370] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@65e92505] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@18dafd3b] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@38093ffe] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1cca3e8c] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@efa04b5] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8167f57] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@75da2db] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@541897c6] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ad558bf] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1826475] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ba355e4] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b1559f1] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b15e68c] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1d3546f9] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24a7d3d3 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6e8aea7e] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@59282dc6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@603b9d4b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6c225adb MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@23263ba] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ca6bd01] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5acd7d1c] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b52a40] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@178ba69f] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e4c4fda] under format; prior registration was org.hibernate.dialect.function.FormatFunction@38093ffe MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1826475 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6ba355e4 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f58f492] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13cc31df MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@903c13] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ae5ddc0] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3ba1f56e] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2adc1e84] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@65f3f9e2] MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.SQL - create table tbl_user (id bigint not null auto_increment, email varchar(255) not null, password varchar(100) not null, role enum ('ADMIN','USER') not null, username varchar(100) not null, primary key (id)) engine=InnoDB MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.SQL - alter table tbl_user drop index user_name_unique MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.SQL - alter table tbl_user add constraint user_name_unique unique (user_name) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.SQL - alter table tbl_user drop index UKnpn1wf1yu1g5rjohbek375pp1 MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG org.hibernate.SQL - alter table tbl_user add constraint UKnpn1wf1yu1g5rjohbek375pp1 unique (email) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@24888d8b MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 4c5806be-c883-45e0-b5b2-11cefedce231 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 13:38:20 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 13:38:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 13:39:08 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 13:39:08 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e37b8d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65f3f9e2] MDC:[traceId=, spanId=]
2025-04-18 13:39:08 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 13:39:08 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 13:51:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 13:51:59 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28989415 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28989415 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@28989415 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6eda012b MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6eda012b MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@781dbe44 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@781dbe44 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d66a126 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d66a126 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1132baa3 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1132baa3 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1132baa3 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2fdf22f7 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2fdf22f7 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2fdf22f7 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3a2546d6 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3a2546d6 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7282af25 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7661e474 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7661e474 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@20ffb8d5 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@307c59ea MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57e03347 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57e03347 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@57e03347 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2edb2f8b MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2edb2f8b MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2edb2f8b MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@733f1395 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@733f1395 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@733f1395 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@21dea711 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@21dea711 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21dea711 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7772d266 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7772d266 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7772d266 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@a21c74 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@a21c74 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@b8a144e MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@b8a144e MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5fb8dc01 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5fb8dc01 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5fb8dc01 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e38c472 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2ee92e7d MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2ee92e7d MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@759a678a MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6cdbe5ec MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6cdbe5ec MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6cdbe5ec MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@14b8a751 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7345f97d MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@554566a8 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@66020d69 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@66020d69 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3751acd7 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3751acd7 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6b832551 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@150d6eaf MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@63124022 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@591f6f83 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2b44605c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@55421b8d MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@24a04257 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@24a04257 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6615237 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6615237 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@eaf8427 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@eaf8427 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4bf4680c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4bf4680c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d6039df MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d6039df MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@611c3eae MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13e00016 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b3cbe6e MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b3cbe6e MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@177ede17 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@17176b18 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e4395c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1ab53860 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1ab53860 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b5ac347 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@57b9389f MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@72b2c5ed MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72b2c5ed MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@41f785e3 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@41f785e3 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6c9a3661 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6c9a3661 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6c9a3661 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@727986ad MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@727986ad MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@727986ad MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1600a8a2 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b25ef1c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@56b1e527 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56b1e527 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@68c34db2 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@68c34db2 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@68c34db2 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b95bdb0 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3f0ce0d1 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@664db2ca MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@664db2ca MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1491cd6c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1491cd6c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1491cd6c MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@423f8a73 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@423f8a73 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1aedf08d MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1aedf08d MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@113dcaf8 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@113dcaf8 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b5d9f1e MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b5d9f1e MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@350ff014 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@350ff014 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@401317a0 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3f866f50 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4ae280da MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4ae280da MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6826b70f MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4df7d9ee MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@781dac73 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3a4e524 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e67a490 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2dac2e1b MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38c761e9 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1cee2e10 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7f4e5a39 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ec9f8d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ec9f8d) [was null] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4628a02b] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2b01c689] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@51424203] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ec9f8d] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3ec9f8d] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23e9dd78) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@470c4229) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6408be5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e57b783) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73b8ab2c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5600a278) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@549d14fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77d54a41) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41026e5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12421766) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e44cb34) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@731e0bff) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@213ceb4e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23c72128) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bd2430f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2890e479) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eb00cbe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74e4be21) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@492fa72a MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6826b70f` MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ef4297d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c000cc4] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 13:52:00 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5f35370b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@16c8e9b8, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.9794929187086416931, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=1096, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.9794929187086416931, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7030b74c, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@624494d4] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@507f7cd1] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@349996a6] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73dd0f23] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38d4488c] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@579ce2e9] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b800a11] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3faa55] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@115a7e51] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7857cb1d] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2e64ae1a] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3921e96f] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fad5ace] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6d45dd4] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@63ed5dae] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@566cc6af] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ff53704] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@65da1cbe] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@c7269ad] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7591cbd1] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8e3449e] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3023f157] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f3aa970] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5213b887] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c6d1ef] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f4029e9] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@257b6c58] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ae32ff0] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7fb5368e] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3faa55 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@102aa5fc] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@36885319] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62a81453] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@115a7e51 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@17034458] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0e0ba7] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7df5549e] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cbdc0f4] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11174bf] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4f0c1409] under format; prior registration was org.hibernate.dialect.function.FormatFunction@65da1cbe MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@40c6d1ef MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f4029e9 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@188ae8d2] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b800a11 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a522157] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@706c062e] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6b92a0d1] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ef4297d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@445b4594] MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@165a5979 MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 3ad88615-9a88-47d0-907c-d49fe7c5c91a (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 13:52:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 13:56:51 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 13:56:51 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7b74708f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@445b4594] MDC:[traceId=, spanId=]
2025-04-18 13:56:51 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 13:56:51 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:20 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@f559c74 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@f559c74 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2776fd8f MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c62c3fd MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@734ce281 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@49b89425 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@59328218 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5345dfe8 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@478967eb MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a1dda83 MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c8efde4] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c8efde4) [was null] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@48cdb156] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 14:00:21 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b4814d0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4ae8fb2a] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c8efde4] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6c8efde4] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d3634c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e67a8c0) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5960f17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d1b3620) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71e7c13f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2295566b) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@174e1b99) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53a09566) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c815814) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14af73e1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24068086) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@103e7c7c MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71b97eeb` MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e7cfd49] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a8640f7] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@666b91db, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@11a67420, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.16657900962590011825, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=22740, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.16657900962590011825, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@663cf5d7, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2befb16f] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3b1137b0] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@21ba0d33] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77db231c] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60b4d934] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a3e633a] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41abee65] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fc6f68f] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e34a84b] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@468f2a6f] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3be369fc] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@38f63756] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d7caf9c] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5065bdac] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7455204c] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@68229a6] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4a9ff419] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@310f8a05] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6d7677d8] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@27b7204] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79631db0] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f837c11] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1aca6dc3] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3731e8b6] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@565efd7d] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42a97053] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc4a9b0] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33089426] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@42474b18] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fc6f68f MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5af56240] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2314cd97] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51dbed72] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e34a84b MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@602aeb87] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@423762ae] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b58d678] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@535a6697] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@641bc9a8] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1d40f597] under format; prior registration was org.hibernate.dialect.function.FormatFunction@310f8a05 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@565efd7d MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@42a97053 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20960b51] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41abee65 MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2078bf0a] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a947424] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4c579b5b] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 14:00:22 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e7cfd49] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4be1c797] MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ead245 MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: d6b49163-0b61-49c5-b6f8-8f364bff373c (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 14:00:23 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 14:00:23 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42fb851a MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@539495818 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:01:39 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@1194838920 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@59b81c27 MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@75cbe407 MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 14:01:40 [http-nio-8013-exec-10] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG, role=ADMIN, id=1, email=daile2692003@gmail.com, username=daile269} MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72074050 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1061671148 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 2070490300 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 14:01:58 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@742168b8 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2206472 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1661825242 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1879743151 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 14:02:06 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7809bfd4 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@270f4c9a MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@446060417 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@442723160 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.e.jdbc.spi.SqlExceptionHelper - could not execute statement [insert into tbl_user (email,password,role,username) values (?,?,?,?)] MDC:[traceId=, spanId=]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'daile2692003@gmail.com' for key 'tbl_user.UKnpn1wf1yu1g5rjohbek375pp1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1054)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1003)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1312)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:988)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:671)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:292)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:273)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:323)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:391)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:305)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137)
	at org.hibernate.event.internal.DefaultMergeEventListener.saveTransientEntity(DefaultMergeEventListener.java:378)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:299)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:418)
	at org.hibernate.event.internal.DefaultMergeEventListener.merge(DefaultMergeEventListener.java:210)
	at org.hibernate.event.internal.DefaultMergeEventListener.doMerge(DefaultMergeEventListener.java:148)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:132)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:86)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:850)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.merge(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy128.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:173)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:148)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy132.save(Unknown Source)
	at com.learning.user_service.service.impl.IUserService.createUser(IUserService.java:33)
	at com.learning.user_service.controller.UserController.createUser(UserController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-04-18 14:03:38 [http-nio-8013-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1062, SQLState: 23000 MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry 'daile2692003@gmail.com' for key 'tbl_user.UKnpn1wf1yu1g5rjohbek375pp1' MDC:[traceId=, spanId=]
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:512)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:861)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:836)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.merge(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy128.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:639)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:173)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:148)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy132.save(Unknown Source)
	at com.learning.user_service.service.impl.IUserService.createUser(IUserService.java:33)
	at com.learning.user_service.controller.UserController.createUser(UserController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-04-18 14:03:38 [http-nio-8013-exec-2] DEBUG o.h.e.t.internal.TransactionImpl - rolling back MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34bb6cf1 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1606813454 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@391398158 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6ab501f2 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@40b3ce58 MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 14:04:03 [http-nio-8013-exec-4] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$.4DSsZtf9ZxTXN961RoCZ.lFu1WLodNu2/ABNrlpwlOjXeTirHOYa, role=USER, id=3, email=dail2@gmail.com, username=oaals} MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(3))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(3)]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(3).username]
 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(3)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(3) -> EntityResultInitializer(com.learning.user_service.entity.User(3))@1610013922 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 1 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#1] : 1700630210 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#1 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c254f47 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 3 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#3] : 1658316673 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dail2@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$.4DSsZtf9ZxTXN961RoCZ.lFu1WLodNu2/ABNrlpwlOjXeTirHOYa] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [oaals] MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#3 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@c254f47 MDC:[traceId=, spanId=]
2025-04-18 14:04:28 [http-nio-8013-exec-9] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 14:04:48 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 14:04:48 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75393423] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4be1c797] MDC:[traceId=, spanId=]
2025-04-18 14:04:48 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 14:04:48 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:25 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4d7cac24 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4d7cac24 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2450256f MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@59918c8f MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2b7facc7 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c74d19 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@24197b13 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2776fd8f MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c62c3fd MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@734ce281 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@388be5fd] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@388be5fd) [was null] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6c8efde4] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@24e5389c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3b170235] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@388be5fd] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@388be5fd] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7286827b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dd64243) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ef913a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@520c3dcb) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@145fe8ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b347439) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d3634c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e67a8c0) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5960f17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d1b3620) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71e7c13f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2295566b) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@174e1b99) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53a09566) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14af73e1) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24068086) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4f4d05b3 MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2450256f` MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4641f66c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6b0ba697] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 15:50:27 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@67d180e4, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@54e18a46, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.14061155918275332915, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=5752, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.14061155918275332915, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1293f8d7, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@344a065a] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2aeb7c4c] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67f266bd] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ee1ddcf] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b630d4b] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70aa03c0] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44da745f] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2435c6ae] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@762f8ff6] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4cb58e8b] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@441016d6] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@35744f8] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fbcc078] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cf66cf9] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1782896] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6e617c0e] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@510203de] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@430212cb] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@34e4fb39] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6705b763] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1ef5cde4] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@359fa722] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27b7204] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5895c065] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@683fac7e] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2051a0ec] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79631db0] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f837c11] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@42a97053] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2435c6ae MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1bbef3c7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@35995029] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42474b18] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@762f8ff6 MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@247dcbba] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@535be281] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20db19ff] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5eef8a16] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1405aa6a] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18c60d81] under format; prior registration was org.hibernate.dialect.function.FormatFunction@430212cb MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@683fac7e MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2051a0ec MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@602aeb87] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44da745f MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@423762ae] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b58d678] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@20960b51] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4641f66c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@26c1244c] MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b0d480c MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: b3398a55-a4ed-4e5f-9abe-29f48b8fb913 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 15:50:28 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 15:50:29 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 15:50:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 15:50:35 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 15:50:35 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@53985954] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26c1244c] MDC:[traceId=, spanId=]
2025-04-18 15:50:35 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 15:50:35 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:01 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 15:59:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@760f1081 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf) [was null] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@46612bfc] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f213a2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25699aa7] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c4a860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@93f15f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5034681f) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2cff5aa3 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@760f1081` MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5cb8580] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@504c415c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c9e74f3, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.17464481629395288696, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=16348, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.17464481629395288696, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@813ab53, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@afb7b03] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5ced0537] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ee1ddcf] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7cf66cf9] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1782896] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@34e68840] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@510203de] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@477bea57] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6493f780] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2674ca88] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1e1598e5] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@359fa722] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2051a0ec] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@bc4a9b0] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1e3dc24f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@239d9cb7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a35ae82] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ab21633] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@103e9972] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@14d298d6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@359fa722 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2212e291 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5af56240 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400 MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@26d445e9] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 15:59:03 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8d23cd8 MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: a2be2dcb-1c47-445d-a507-66b135d56d8b (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 15:59:04 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 15:59:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c956c0a MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@303266977 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1244d5ce MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4] MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@2cf8bab MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 16:00:02 [http-nio-8013-exec-1] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$F0iK0B34NUR/61o1EeTHqetVoU73QYtf4NrZcwcGlV1xyijycOupi, role=ADMIN, id=4, email=de2692003@gmail.com, username=daile} MDC:[traceId=, spanId=]
2025-04-18 16:01:22 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:01:22 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@337b79c5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:01:22 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:01:22 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:24 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5e99e2cb MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5e99e2cb MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c74d19 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@24197b13 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2776fd8f MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1c62c3fd MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@734ce281 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@49b89425 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@59328218 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5345dfe8 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8f2e3e6] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8f2e3e6) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5e9bf744] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@45e140ae] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48cdb156] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8f2e3e6] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8f2e3e6] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@520c3dcb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@145fe8ab) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b347439) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d3634c8) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e67a8c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5960f17) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d1b3620) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71e7c13f) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2295566b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@174e1b99) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53a09566) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c815814) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14af73e1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73da303e) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32513dea) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f77e065) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@395eb363 MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c74d19` MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@539ee811] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1aa59698] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@58e5fbe5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@335896bd, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.5506560239132279133, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10428, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.5506560239132279133, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6b33892a, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6d9ee75a] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@912747d] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78ea700f] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44da745f] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2435c6ae] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@574f9e36] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77db231c] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60b4d934] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1e406cbe] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2431050d] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6a3a56de] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4c0930c4] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:26 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75c0cd39] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4e26040f] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2e9dcdd3] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@34e68840] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@62615be] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@67a3394c] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4f98ac31] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5401c6a8] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5895c065] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@683fac7e] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2051a0ec] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79631db0] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f837c11] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1aca6dc3] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3731e8b6] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@565efd7d] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@129c322f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60b4d934 MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@31b91435] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5d75f90e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2212e291] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1e406cbe MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5eef8a16] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1405aa6a] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18c60d81] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@602aeb87] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@423762ae] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7b58d678] under format; prior registration was org.hibernate.dialect.function.FormatFunction@67a3394c MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@f837c11 MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1aca6dc3 MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@535a6697] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77db231c MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@641bc9a8] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d40f597] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@62d6ac] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@539ee811] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7b38db21] MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2b9615cb MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 12c2717b-c74e-4921-b7af-0613221d3e35 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:01:27 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:01:27 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(3))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(3)]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(3).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(3)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(3) -> EntityResultInitializer(com.learning.user_service.entity.User(3))@59709685 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#1] : 983948056 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#1 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e52436c MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 3 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#3] : 1640480279 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dail2@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$.4DSsZtf9ZxTXN961RoCZ.lFu1WLodNu2/ABNrlpwlOjXeTirHOYa] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [oaals] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#3 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e52436c MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 4 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#4] : 48423655 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [de2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$F0iK0B34NUR/61o1EeTHqetVoU73QYtf4NrZcwcGlV1xyijycOupi] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile] MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#4 MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e52436c MDC:[traceId=, spanId=]
2025-04-18 16:04:21 [http-nio-8013-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:05:05 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:05:05 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@47c296e2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7b38db21] MDC:[traceId=, spanId=]
2025-04-18 16:05:05 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:05:05 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:36 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@760f1081 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@46612bfc] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f213a2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25699aa7] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] MDC:[traceId=, spanId=]
2025-04-18 16:05:38 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c4a860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@93f15f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5034681f) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2cff5aa3 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@760f1081` MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5cb8580] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@504c415c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c9e74f3, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.15292426601630997093, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=25092, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.15292426601630997093, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@813ab53, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@afb7b03] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5ced0537] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ee1ddcf] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7cf66cf9] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1782896] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@34e68840] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@510203de] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@477bea57] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6493f780] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2674ca88] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1e1598e5] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@359fa722] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2051a0ec] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@bc4a9b0] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1e3dc24f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@239d9cb7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a35ae82] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ab21633] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@103e9972] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@14d298d6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@359fa722 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2212e291 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5af56240 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400 MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@26d445e9] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:05:39 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8d23cd8 MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: a24e0d75-866c-4741-bec7-5a9133f543aa (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:05:40 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:05:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a98eac2 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1030534541 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1925449802 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:06:19 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@73c722aa MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77c8b767 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@942820821 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1919616487 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:06:28 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@581db29a MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ee17210 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1897628039 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1007605623 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11347ec8 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73bc52b7 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1011267723 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1440890643 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:09:47 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c6947c4 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62b9a430 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@759385132 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 2054791724 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d6cb363 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70c43e86 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1061082325 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 373345787 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:09:54 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f112b9a MDC:[traceId=, spanId=]
2025-04-18 16:10:08 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:10:08 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@789573be] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:10:08 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:10:08 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:19 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@433ef204 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@433ef204 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@433ef204 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4dd2ef54 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4dd2ef54 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@795b66d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@795b66d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@426c0486 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@426c0486 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@720f56e2 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@677349fb MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4466cf5d MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c60ce47 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2450256f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@59918c8f MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2b7facc7 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c74d19 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@24197b13 MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3915e7c3] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3915e7c3) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@440ef8d] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:10:20 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@17fbfb02] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@8f2e3e6] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3915e7c3] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3915e7c3] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56f72909) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71285693) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3199a202) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7286827b) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dd64243) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ef913a4) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@520c3dcb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@145fe8ab) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b347439) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d3634c8) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e67a8c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5960f17) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d1b3620) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71e7c13f) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2295566b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@174e1b99) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53a09566) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c815814) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5bf7f15f MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@720f56e2` MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@779b4f9c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31fe0ce5] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@78e97d4d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7096d451, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.3032113864255440950, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10528, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.3032113864255440950, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7816454d, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@8c18bde] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@36cf6377] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2befb16f] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fd35a92] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40db6136] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ced0537] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ee1ddcf] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b630d4b] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@297dff3a] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@438c0aaf] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6f4f2cc0] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2ed84be9] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@400e741] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6c851821] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@38f63756] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@8bde368] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@9a07409] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5d20195b] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1eb52131] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5cb6abc8] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e04b8a0] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a97a895] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5401c6a8] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1ef5cde4] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@359fa722] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27b7204] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5895c065] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@683fac7e] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1aca6dc3] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b630d4b MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@bc4a9b0] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@33089426] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@129c322f] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@297dff3a MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4eb73cc8] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e23ba17] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47e725af] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@247dcbba] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@535be281] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20db19ff] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5d20195b MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@359fa722 MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@27b7204 MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5eef8a16] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ee1ddcf MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1405aa6a] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18c60d81] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@535a6697] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:10:21 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@779b4f9c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c3884f5] MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1edf52e6 MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 26a07aaa-a36c-4f6d-9589-d4132f3ddae6 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:10:22 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:10:22 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8451382 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1797457735 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1251557720 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65ead793 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77c8b767 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@942820821 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1919616487 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:10:31 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@581db29a MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ec098f7 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@747788682 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@44edc1a5 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@c8427a3 MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 16:11:50 [http-nio-8013-exec-5] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG, role=USER, id=5, email=dess2692003@gmail.com, username=daile1} MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ee17210 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1897628039 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 1007605623 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11347ec8 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73bc52b7 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1011267723 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 1440890643 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:12:12 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c6947c4 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62b9a430 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@759385132 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 2054791724 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d6cb363 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70c43e86 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1061082325 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 373345787 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:12:14 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f112b9a MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45b7db65 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@838836046 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 384944557 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5bb921d2 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4355400b MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1711599519 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 242748475 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:12:15 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fc1627c MDC:[traceId=, spanId=]
2025-04-18 16:12:35 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:12:35 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4478d162] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6c3884f5] MDC:[traceId=, spanId=]
2025-04-18 16:12:35 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:12:35 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:12:37 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:38 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2776fd8f MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2776fd8f MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@52621501 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@10e9a5fe MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a109ff7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a109ff7) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4f213a2] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25699aa7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5a47730c] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a109ff7] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3a109ff7] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@546083d6) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ad8d36f) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a5bef0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68c4a860) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@570ed9c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@93f15f6) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5034681f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dfe5dd1) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@b6136eb MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@52621501` MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cb8580] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ca1e49a] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:12:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6c9e74f3, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@813ab53, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.17275251631938020657, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=24520, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.17275251631938020657, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5030997b, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4fd63c43] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ee1ddcf] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6b630d4b] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@438c0aaf] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6a3a56de] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38f63756] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@8bde368] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@510203de] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b0835cb] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5dc7391e] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@782dc5] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@67a3dd86] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@67a3394c] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@27b7204] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@79631db0] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@33089426] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64e89bb2] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3ea8ff31] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@438c0aaf MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a35ae82] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1ab21633] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59aa1d1c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6a3a56de MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@75dbe490] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14d298d6] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@64af5454] under format; prior registration was org.hibernate.dialect.function.FormatFunction@27b7204 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5af56240 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2314cd97 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ff8e36d] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6e7f29d5] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cb8580] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@19bbb216] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5feaafb3 MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 93a2fc69-b21f-4be5-b1a6-7810448bcef0 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:12:40 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:12:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e70094 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1058378847 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 1339418273 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:13:10 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2109e3d2 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1db7b9a8 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1380798037 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 182811125 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:13:11 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3262b11a MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5960441a MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@379239293 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 901206186 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@76b54432 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f63299e MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@10077241 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 784370331 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:13:22 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@60b63b76 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74bd55ee MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@994557746 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 1573964506 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b68407d MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ee17210 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1897628039 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 1007605623 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:14:24 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11347ec8 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22789fbc MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1837264824 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 1940709013 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dad90f7 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@794439c7 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@221291891 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 36392091 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:15:40 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a386a90 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@306a8ba7 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1365594797 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 2121951530 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f1ac72 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72fb5e26 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@2123947172 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#5] : 401319766 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#5 MDC:[traceId=, spanId=]
2025-04-18 16:16:14 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2fae34f3 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64f8a771 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@468715048 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 2062849198 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:16:26 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61ae1c9e MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ddca8e7 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@304498455 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1379353590 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7209b858 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d09abca MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1322112413 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 292545835 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:16:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31aebba6 MDC:[traceId=, spanId=]
2025-04-18 16:17:28 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:17:28 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3d6d7b37] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@19bbb216] MDC:[traceId=, spanId=]
2025-04-18 16:17:28 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:17:28 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:35 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@9a9aa68 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@9a9aa68 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@9a9aa68 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a3883c4 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a3883c4 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1537e43 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1537e43 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@573aeab2 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@573aeab2 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1304e0d7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1304e0d7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1304e0d7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ddc67d0 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ddc67d0 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ddc67d0 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7767bd4e MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7767bd4e MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7708b66a MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@433ef204 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@433ef204 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4dd2ef54 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@795b66d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@120df990 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@120df990 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6f96dd64 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4d7cac24 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@409732fb MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@73d62b5 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e99e2cb MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@76ac68b0 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@f559c74 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@63917fe1 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@720f56e2 MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@61a87366] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@61a87366) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@70091872] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:18:36 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@105db94d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d99ee1b] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@61a87366] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@61a87366] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@141dfcf9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a7bbdbc) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63eea8c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@19924f15) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@621392ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35524549) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23ec63af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@280d6a20) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56f72909) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71285693) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3199a202) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7286827b) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dd64243) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ef913a4) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@520c3dcb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@145fe8ab) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b347439) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d3634c8) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36cf16a6 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6f96dd64` MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@25823192] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3df04fa1] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1ed52f44, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@771afdd5, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.899272022774215098, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=12508, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.899272022774215098, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3abadb65, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4ba402b5] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@8c18bde] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6719f206] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b1137b0] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@21ba0d33] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@afb7b03] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fd63c43] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d483ebe] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@44da745f] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2e057637] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1e406cbe] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4cb58e8b] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f4f2cc0] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@522f0bb8] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@400e741] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6c851821] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@38f63756] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62615be] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7ca29311] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@430212cb] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34e4fb39] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@36fe83d] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@310f8a05] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f98ac31] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5cb6abc8] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20e48e63] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6d7677d8] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6705b763] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1ef5cde4] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d483ebe MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@683fac7e] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2051a0ec] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79631db0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@44da745f MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@19fc0ef7] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d5de79a] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@796642ae] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16f8df70] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f0ae0ee] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6de9bba2] under format; prior registration was org.hibernate.dialect.function.FormatFunction@62615be MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5cb6abc8 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@20e48e63 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2651e783] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fd63c43 MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7682bf66] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4eb73cc8] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@535be281] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:18:37 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@25823192] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@32050628] MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@25890ce3 MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: a17c2842-ad8d-4d25-9495-b04e82f505c2 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:18:38 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:18:38 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@99a20f6 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@2086299777 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1472897175 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:18:42 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1a2e24f8 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22789fbc MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1837264824 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1940709013 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:18:43 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dad90f7 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74bd55ee MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@994557746 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1573964506 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:18:46 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b68407d MDC:[traceId=, spanId=]
2025-04-18 16:21:59 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:21:59 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7e11e15e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@32050628] MDC:[traceId=, spanId=]
2025-04-18 16:21:59 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:21:59 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:22:01 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:22:01 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:22:01 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:01 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:01 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:02 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@677349fb MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@677349fb MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@734ce281 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@49b89425 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@59328218 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5345dfe8 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@478967eb MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4a1dda83 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7f2b39a MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7a358613 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@760f1081 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5e9bf744] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5e9bf744) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@54326e9] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@20216016] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2b441e56] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5e9bf744] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5e9bf744] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d1b3620) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71e7c13f) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2295566b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@174e1b99) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53a09566) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14af73e1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73da303e) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24068086) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32513dea) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d0e703a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f77e065) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac1b6c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fb82f73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@34bddf43 MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@734ce281` MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45e69324] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c89b864] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:22:03 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@11b14ae3, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2b6ee447, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.1991864795292632971, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=16588, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.1991864795292632971, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@9cb927e, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67f266bd] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4fd63c43] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7d483ebe] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41abee65] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fc6f68f] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@297dff3a] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30437e9c] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e057637] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@37b80ec7] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@400e741] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6c851821] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1782896] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8bde368] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@9a07409] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5b0835cb] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5dc7391e] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@782dc5] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20e48e63] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@a97a895] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2051a0ec] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3731e8b6] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@565efd7d] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42a97053] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc4a9b0] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33089426] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129c322f] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bbef3c7] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2212e291] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e057637 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@64e89bb2] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@15fe020d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10830d50] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@37b80ec7 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@535a6697] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@641bc9a8] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d40f597] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20960b51] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2078bf0a] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1a947424] under format; prior registration was org.hibernate.dialect.function.FormatFunction@20e48e63 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@33089426 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@129c322f MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d6ac] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30437e9c MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@103e9972] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@14d298d6] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45e69324] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c28009f] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7891742e MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 2aaa5c59-1a0f-40fb-86f4-70e46a914fa8 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:22:04 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:04 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:22:15 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:22:15 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@55b3e72a MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@783714774 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 160405859 MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:22:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@494a774c MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f63299e MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@10077241 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 784370331 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:22:18 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@60b63b76 MDC:[traceId=, spanId=]
2025-04-18 16:22:35 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:22:35 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@79b994d2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c28009f] MDC:[traceId=, spanId=]
2025-04-18 16:22:35 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:22:35 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:37 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@760f1081 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@46612bfc] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f213a2] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25699aa7] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@267891bf] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c4a860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@93f15f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5034681f) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2cff5aa3 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@760f1081` MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5cb8580] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@504c415c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c9e74f3, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.16834016003888238604, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=24732, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.16834016003888238604, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@813ab53, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@afb7b03] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5ced0537] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ee1ddcf] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7cf66cf9] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1782896] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@34e68840] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@510203de] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@477bea57] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6493f780] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2674ca88] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1e1598e5] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@359fa722] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2051a0ec] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@bc4a9b0] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1e3dc24f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@239d9cb7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a35ae82] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ab21633] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@103e9972] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@14d298d6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@359fa722 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2212e291 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5af56240 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400 MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@26d445e9] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:22:39 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8d23cd8 MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 6cd47f6d-53a6-4efa-8677-4870f4264187 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:22:40 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:22:40 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b7898ce MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1759770741 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1769728785 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:23:16 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ca0a1cc MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ddca8e7 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@304498455 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1379353590 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:03 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7209b858 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77c8b767 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@942820821 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1919616487 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:05 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@581db29a MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22789fbc MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1837264824 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1940709013 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:06 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@dad90f7 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74bd55ee MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@994557746 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1573964506 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:07 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b68407d MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ee17210 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1897628039 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1007605623 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:22 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11347ec8 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73bc52b7 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1011267723 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1440890643 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c6947c4 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6841cf40 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@472139047 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1754367787 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 16:24:35 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5622fa63 MDC:[traceId=, spanId=]
2025-04-18 16:25:18 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:25:18 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3beac63e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:25:18 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:25:18 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:45:21 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:45:22 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:22 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:45:22 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:45:22 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:22 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:22 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@24197b13 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@24197b13 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7a358613 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@760f1081 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2b441e56] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2b441e56) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@78b0ec3a] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@46612bfc] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f213a2] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2b441e56] MDC:[traceId=, spanId=]
2025-04-18 16:45:23 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2b441e56] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c4a860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@93f15f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5034681f) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2cff5aa3 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7a358613` MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5cb8580] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@504c415c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6c9e74f3, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.17001284799299016647, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10544, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.17001284799299016647, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@813ab53, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@afb7b03] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5ced0537] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ee1ddcf] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7cf66cf9] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1782896] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@34e68840] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@510203de] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@477bea57] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6493f780] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2674ca88] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1e1598e5] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@359fa722] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2051a0ec] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@bc4a9b0] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1e3dc24f] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@239d9cb7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a35ae82] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ab21633] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@468f2a6f MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@103e9972] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@14d298d6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@359fa722 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2212e291 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5af56240 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400 MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@26d445e9] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:45:24 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3639b04] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@8d23cd8 MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: f3938481-2cba-4882-8146-a4d44ec4d9a0 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:45:25 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:45:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:45:40 [http-nio-8013-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:45:40 [http-nio-8013-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:45:40 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 16:45:40 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@1635975698 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:45:40 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User): 1 MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User#1] : 983787221 MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User#1 MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5da7cee4 MDC:[traceId=, spanId=]
2025-04-18 16:45:41 [http-nio-8013-exec-4] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:46:11 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:46:11 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@383fa2da] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e149395] MDC:[traceId=, spanId=]
2025-04-18 16:46:11 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:46:11 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:15 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1c74d19 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c74d19 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7f2b39a MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7a358613 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@760f1081 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20216016] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20216016) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1a2773a8] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@78b0ec3a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@46612bfc] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20216016] MDC:[traceId=, spanId=]
2025-04-18 16:46:16 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20216016] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14af73e1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68c4a860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@23708f14 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7f2b39a` MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30133a11] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2168def] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4f356b98, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1ab85862, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.8993085029135525694, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=1720, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.8993085029135525694, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@504c415c, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3b1137b0] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1fd35a92] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@40db6136] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@441016d6] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4c0930c4] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3d7caf9c] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@9a07409] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7455204c] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@68229a6] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4a9ff419] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@35f22eef] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@430212cb] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5401c6a8] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5895c065] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@565efd7d] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129c322f] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bbef3c7] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@15fe020d] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@141a10bf MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5ba36c83] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5342032a] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@239d9cb7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@441016d6 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1a947424] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d6ac] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@103e9972] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5a96f3cb] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5401c6a8 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@31b91435 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5d75f90e MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e406cbe MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14d298d6] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@116b0b32] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30133a11] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25da1dc9] MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@138d978e MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 7d381305-d1b1-4f60-877d-50184bfda769 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:46:17 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:46:18 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:18 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@1817193134 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User): 1 MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User#1] : 887864310 MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User#1 MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b887272 MDC:[traceId=, spanId=]
2025-04-18 16:46:31 [http-nio-8013-exec-8] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:46:54 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:46:54 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@44c8c2a4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25da1dc9] MDC:[traceId=, spanId=]
2025-04-18 16:46:54 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:46:54 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:46:58 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@359ceb13 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1068176 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5bf4764d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@71789580 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@23ee2ccf MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@165614f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6e685e6c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5b0902b4 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9d3d54e MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2f04993d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@333398f MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6f96dd64 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6f96dd64 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2c60ce47 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2450256f MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@59918c8f MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b7facc7 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1c74d19 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@24197b13 MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@71b97eeb MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2776fd8f MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c62c3fd MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e362407] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e362407) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6f315b08] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c8efde4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@24e5389c] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e362407] MDC:[traceId=, spanId=]
2025-04-18 16:46:59 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e362407] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7286827b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dd64243) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ef913a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@520c3dcb) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@145fe8ab) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b347439) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d3634c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e67a8c0) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5960f17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d1b3620) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71e7c13f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2295566b) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@174e1b99) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53a09566) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14af73e1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24068086) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4f4d05b3 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2c60ce47` MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4641f66c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6b0ba697] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@67d180e4, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@54e18a46, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.1221354474040430427, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10604, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.1221354474040430427, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1293f8d7, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@344a065a] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2aeb7c4c] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67f266bd] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ee1ddcf] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b630d4b] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70aa03c0] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44da745f] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2435c6ae] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@762f8ff6] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4cb58e8b] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@441016d6] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@35744f8] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fbcc078] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cf66cf9] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1782896] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6e617c0e] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@510203de] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@430212cb] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@34e4fb39] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6705b763] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1ef5cde4] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@359fa722] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27b7204] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5895c065] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@683fac7e] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2051a0ec] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79631db0] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f837c11] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@42a97053] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2435c6ae MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1bbef3c7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@35995029] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42474b18] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@762f8ff6 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@247dcbba] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@535be281] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20db19ff] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5eef8a16] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1405aa6a] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18c60d81] under format; prior registration was org.hibernate.dialect.function.FormatFunction@430212cb MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@683fac7e MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2051a0ec MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@602aeb87] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44da745f MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@423762ae] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b58d678] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@20960b51] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4641f66c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@26c1244c] MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b0d480c MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: c30307c0-2b67-4faf-822e-ad3db5c6ebfe (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:47:00 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:47:01 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:47:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:47:06 [http-nio-8013-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:47:06 [http-nio-8013-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@1197919774 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User): 1 MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User#1] : 1795183179 MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User#1 MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@10dfebeb MDC:[traceId=, spanId=]
2025-04-18 16:47:07 [http-nio-8013-exec-1] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:49:34 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:49:34 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@8edc600] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26c1244c] MDC:[traceId=, spanId=]
2025-04-18 16:49:34 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:49:34 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:12 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@59918c8f MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@59918c8f MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@478967eb MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4a1dda83 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7f2b39a MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7a358613 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@760f1081 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4ae8fb2a] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4ae8fb2a) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3a109ff7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@111a7973] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a2773a8] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4ae8fb2a] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4ae8fb2a] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@174e1b99) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53a09566) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14af73e1) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24068086) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32513dea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d0e703a) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f77e065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f655dbd) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@32646ecf MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@478967eb` MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30a62a5b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41a8f0d8] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:51:14 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@8585cdd, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1325f967, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.13621374499792178269, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=22328, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.13621374499792178269, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4f356b98, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@78ea700f] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5d98364c] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@23d23d98] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30437e9c] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e057637] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5308e79d] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fbcc078] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7cf66cf9] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2e9dcdd3] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e617c0e] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@510203de] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@477bea57] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6493f780] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2674ca88] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@e04b8a0] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@359fa722] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1aca6dc3] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc4a9b0] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33089426] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129c322f] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bbef3c7] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@51dbed72] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e3dc24f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3ea8ff31] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba36c83] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5308e79d MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@20960b51] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2078bf0a] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a947424] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d6ac] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@103e9972] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@75dbe490] under format; prior registration was org.hibernate.dialect.function.FormatFunction@e04b8a0 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@35995029 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@42474b18 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@f6cde7e] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30a62a5b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25890ce3] MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1cc42abe MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 9b86aac8-caa0-4886-8846-0745d05b52ad (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:51:15 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:51:15 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User -> EntityResultInitializer(com.learning.user_service.entity.User)@2057709838 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.id=? MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User): 1 MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User#1] : 2133492737 MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User#1 MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@408e51af MDC:[traceId=, spanId=]
2025-04-18 16:51:34 [http-nio-8013-exec-6] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:51:51 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:51:51 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6762e8d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25890ce3] MDC:[traceId=, spanId=]
2025-04-18 16:51:51 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:51:51 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:57:59 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4c24f3a2 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1c62c3fd MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c62c3fd MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@164d01ba MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@18c880ea MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@10e9a5fe MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@259287ac MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@111a7973] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@111a7973) [was null] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@25699aa7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5a47730c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@15369d73] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@111a7973] MDC:[traceId=, spanId=]
2025-04-18 16:58:00 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@111a7973] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d0e703a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f77e065) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f655dbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@546083d6) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac1b6c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a751535) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7fb82f73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5896b9f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ad8d36f) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68c4a860) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@570ed9c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@93f15f6) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5034681f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dfe5dd1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fe05fff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e017950) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@73234691 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@401e02b4` MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aee6d14] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54a6ef6] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5030997b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@62c47480, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.11193660844629324977, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=23340, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.11193660844629324977, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7de2bdc7, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@cea67b1] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@70aa03c0] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@44da745f] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dffa400] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e34a84b] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@438c0aaf] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7577589] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b80ec7] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@400e741] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4e26040f] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2e9dcdd3] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@68229a6] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62615be] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7ca29311] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5d20195b] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1eb52131] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@36fe83d] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@683fac7e] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1aca6dc3] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1bbef3c7] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2212e291] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64e89bb2] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15fe020d] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10830d50] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5342032a] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b80ec7 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@59aa1d1c] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@169d4aba] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@612bb755] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@400e741 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5a96f3cb] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14d298d6] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@f6cde7e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@683fac7e MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51dbed72 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@64e89bb2 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ff8e36d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7577589 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@116b0b32] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f22fd5d] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7f94541b] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 16:58:01 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aee6d14] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@549debdb] MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@669469c9 MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 6e027ecb-b3bd-47e5-9473-3c2882353a0a (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 16:58:02 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 16:58:02 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(3))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(3)]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(3).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(3).username]
 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(3)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(3) -> EntityResultInitializer(com.learning.user_service.entity.User(3))@1446069302 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 1 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#1] : 95240553 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#1 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7454275e MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [3] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 3 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#3] : 1260466520 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dail2@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$.4DSsZtf9ZxTXN961RoCZ.lFu1WLodNu2/ABNrlpwlOjXeTirHOYa] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [oaals] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#3 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7454275e MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [4] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 4 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#4] : 286149923 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [de2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$F0iK0B34NUR/61o1EeTHqetVoU73QYtf4NrZcwcGlV1xyijycOupi] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#4 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7454275e MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [5] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(3)): 5 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(3)#5] : 1968941115 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [dess2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$1gxfQtu7L7JaBnFzHzZEP.Ifl1.IpbC.FwBMoUY1oU7e7eyBFrlSG] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [USER] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile1] MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(3)#5 MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7454275e MDC:[traceId=, spanId=]
2025-04-18 16:59:14 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 16:59:29 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 16:59:29 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45a8f58d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@549debdb] MDC:[traceId=, spanId=]
2025-04-18 16:59:29 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 16:59:29 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:01:22 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:01:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:01:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:01:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:23 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@103c97ff MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7d25913 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@c14e5a5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@16f15ae9 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6206b4a7 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@77896335 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5c1b89ac MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@40a1b6d4 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@175581eb MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b79c8ff MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2baf72d5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@66756662 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2c60ce47 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2c60ce47 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@59328218 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5345dfe8 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@478967eb MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4a1dda83 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7f2b39a MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7a358613 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@760f1081 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@52621501 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@401e02b4 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48cdb156] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48cdb156) [was null] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2b441e56] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@267891bf] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3a109ff7] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48cdb156] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@48cdb156] MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 17:01:24 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2295566b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@174e1b99) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53a09566) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c815814) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14af73e1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da303e) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24068086) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32513dea) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d0e703a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f77e065) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f655dbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@546083d6) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac1b6c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a751535) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fb82f73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2f166d61) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5896b9f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ad8d36f) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3355b8ff MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@59328218` MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3400d6fa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30a62a5b] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@9cb927e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@8585cdd, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.10053372355693578064, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=21768, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.10053372355693578064, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1325f967, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@912747d] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@cea67b1] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5d98364c] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@297dff3a] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30437e9c] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e057637] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6f4f2cc0] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@35744f8] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@75c0cd39] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5065bdac] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e9dcdd3] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@34e68840] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@62615be] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7ca29311] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5d20195b] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6705b763] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1ef5cde4] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@f837c11] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42a97053] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc4a9b0] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33089426] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129c322f] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bbef3c7] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2314cd97] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@10830d50] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e3dc24f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ea8ff31] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6f4f2cc0 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1d40f597] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20960b51] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2078bf0a] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a947424] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d6ac] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@103e9972] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6705b763 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1bbef3c7 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@35995029 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75dbe490] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@94aeba1] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3400d6fa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@f4c3e9] MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@781bd9dd MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 6d5f607f-69b4-4a44-a7e3-a88e8b885ae8 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 17:01:25 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 17:01:26 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:01:26 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26fcd709 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1980443629 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 387389024 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:01:37 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67ec3943 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4dda8982 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@35677298 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1661825242 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:01:38 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@620f9b3d MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14dc86cb MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1529245723 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1397201807 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:02:01 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b098f54 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@975a7d5 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1183793840 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 436664013 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:02:03 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@26a0bdff MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ed7cc58 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@825042889 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 155825417 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:02:04 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5102d886 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5389157f MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@477363013 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 2138468722 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:02:05 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c5c040a MDC:[traceId=, spanId=]
2025-04-18 17:02:27 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 17:02:27 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@32f93d49] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@f4c3e9] MDC:[traceId=, spanId=]
2025-04-18 17:02:27 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:02:27 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:31 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d14e99e MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c24f3a2 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c24f3a2 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@783b3aa0 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@783b3aa0 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2ec85a25 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2ec85a25 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c176ff1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@27c53c32 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5345dfe8 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5345dfe8 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6afbe6a1 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@14457a95 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@10e9a5fe MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@259287ac MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1abcd059 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@61a87366 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3c33fcf8 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@dada335 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4f213a2] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4f213a2) [was null] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6818fd48] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@9263c54] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@28daf506] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4f213a2] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4f213a2] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@546083d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac1b6c0) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a751535) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fb82f73) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f166d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5896b9f5) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ad8d36f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68c4a860) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@93f15f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5034681f) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dfe5dd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fe05fff) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e017950) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d06801f) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@727956bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ffbf0ac) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7b9c2387 MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6afbe6a1` MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fd2a67a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@163df259] MDC:[traceId=, spanId=]
2025-04-18 17:03:33 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@683ed81b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3c116f26, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.16720133792971930682, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7624, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.16720133792971930682, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7db06c50, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1fd35a92] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@574f9e36] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77db231c] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7577589] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b80ec7] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cb58e8b] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f4f2cc0] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5308e79d] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6fbcc078] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5065bdac] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7455204c] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5dc7391e] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a9ff419] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@35f22eef] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@430212cb] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@34e4fb39] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5cb6abc8] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@f837c11] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@42a97053] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@31b91435] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64e89bb2] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15fe020d] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10830d50] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e3dc24f] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ea8ff31] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ba36c83] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1ab21633] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5308e79d MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6ba226cd] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@62e99458] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1eddca25] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6fbcc078 MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@64af5454] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ff8e36d] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@116b0b32] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4f22fd5d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@f837c11 MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@10830d50 MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1e3dc24f MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26d445e9] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f4f2cc0 MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e7f29d5] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27048db3] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6f27730b] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 17:03:34 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7fd2a67a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6075a4ea] MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator - No actions found; doing nothing MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7612f385 MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: bd0075ab-df1d-4d78-b3cd-6765f7af53be (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 17:03:35 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:03:35 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@8953042 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@129434224 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1922186232 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:03:59 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2fa701ca MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6281b13e MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@763054373 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 974250604 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d54b66a MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@33054668 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@2097132611 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 495761746 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:05:56 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1cd04b0c MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@158ea6e0 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1517572122 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1121440661 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:06:05 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a5baf55 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@57fa8a79 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@402683085 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1662135601 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:06:06 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@782f8b82 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19ba0bd3 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1447095471 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1729871416 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@366f13e0 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@735b24ba MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1017237146 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1852434332 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:06:07 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c8e31d5 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67f5d4ba MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@320824468 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1110331897 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:06:51 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2afdb6ec MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@518a47bb MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1117695469 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1211730987 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:06:52 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fffa104 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@491a8f87 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@37509241 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1015908746 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:07:12 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c12e1f2 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e15f1af MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@580189878 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 575385668 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$0bdYBcNLeRDdOZUP/stzAuQKZteHM.9Z8umdvZ6vj/TgfbzDOYOdG] MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:09:08 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@27af8bf5 MDC:[traceId=, spanId=]
2025-04-18 17:11:24 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 17:11:24 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@c6cbce3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6075a4ea] MDC:[traceId=, spanId=]
2025-04-18 17:11:24 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:11:24 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:27 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@38cfecf3 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@682618e5 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@25ad25f5 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5f0f70c7 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1860a7a1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@40d96578 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@c97721b MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@283ab206 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@35fa450f MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c24f3a2 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c24f3a2 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@783b3aa0 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@783b3aa0 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2ec85a25 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2ec85a25 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4c176ff1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c176ff1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@27c53c32 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68aec50 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@478967eb MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@478967eb MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@14457a95 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@48567727 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@10e9a5fe MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@259287ac MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1abcd059 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@61a87366 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3c33fcf8 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@dada335 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@716f94c1 MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25699aa7] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25699aa7) [was null] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@9263c54] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:11:28 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@28daf506] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4662752a] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25699aa7] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@25699aa7] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ac1b6c0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a751535) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fb82f73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f166d61) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5896b9f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ad8d36f) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a5bef0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68c4a860) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@570ed9c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@93f15f6) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5034681f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dfe5dd1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fe05fff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e017950) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d06801f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727956bb) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ffbf0ac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ad5cffa) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@12e2f5ab MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@14457a95` MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@163df259] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@405603b6] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3c116f26, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7db06c50, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.6175495066008508676, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=19560, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.6175495066008508676, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1554eaa4, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@78ea700f] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5d98364c] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@23d23d98] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30437e9c] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e057637] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@762f8ff6] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5308e79d] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6fbcc078] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7cf66cf9] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2e9dcdd3] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e617c0e] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@510203de] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@477bea57] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6493f780] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2674ca88] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@e04b8a0] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@359fa722] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1aca6dc3] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@bc4a9b0] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33089426] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@129c322f] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1bbef3c7] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35995029] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42474b18] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@31b91435] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d75f90e] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@51dbed72] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bf10539 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e3dc24f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3ea8ff31] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ba36c83] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5308e79d MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@20960b51] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2078bf0a] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a947424] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62d6ac] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@103e9972] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@75dbe490] under format; prior registration was org.hibernate.dialect.function.FormatFunction@e04b8a0 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@35995029 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@42474b18 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c579b5b] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30ed2a26 MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a96f3cb] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0704e2] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@f6cde7e] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:11:29 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@163df259] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25890ce3] MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.SQL - create table tbl_user (id bigint not null auto_increment, email varchar(255) not null, password varchar(100) not null, role enum ('ADMIN','USER') not null, username varchar(100) not null, primary key (id)) engine=InnoDB MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.SQL - alter table tbl_user drop index user_name_unique MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.SQL - alter table tbl_user add constraint user_name_unique unique (user_name) MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.SQL - alter table tbl_user drop index UKnpn1wf1yu1g5rjohbek375pp1 MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG org.hibernate.SQL - alter table tbl_user add constraint UKnpn1wf1yu1g5rjohbek375pp1 unique (email) MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@13e5b262 MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 0964acf9-555a-4c82-bfcd-3f695ca0c643 (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 17:11:30 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:11:30 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72391bd7 MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@215779509 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@32d8991f MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@560fc787 MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S, role=ADMIN, id=1, email=daile2692003@gmail.com, username=daile269} MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 17:12:20 [http-nio-8013-exec-10] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S, role=ADMIN, id=1, email=daile2692003@gmail.com, username=daile269} MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5774ac12 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@931823443 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1810323818 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S] MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:12:32 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7512cd4d MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@341c3f0d MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1076209492 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1445170569 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3bd19f1e MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a9b06f1 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1433287066 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1816614939 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:12:43 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48c11ee0 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@dbf6451 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@986700651 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 54983623 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S] MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:12:55 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@47166c47 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f993a44 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1721075723 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1826213951 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S] MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:12:57 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@26c6c87f MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ec50358 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1506538690 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 998919523 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$p0zoFYLHqW5bClqud9kSbe0NZ0ak95qOy0vsyVrd5iq8VU.D0YN5S] MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:13:23 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d61d334 MDC:[traceId=, spanId=]
2025-04-18 17:13:31 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 17:13:31 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34a17a50] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25890ce3] MDC:[traceId=, spanId=]
2025-04-18 17:13:31 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:13:31 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:28 [background-preinit] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1d44bcfa
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/LT_Web/SpringBoot/learning-project/user-service/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.learning.user_service.entity.User]
	Mapping files names []
	Properties [] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator]. MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.cfg.Environment - HHH000206: 'hibernate.properties' not found MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3e03046d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9b3be1c MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@74e497ae MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@13516600 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@35d7386b MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@21002393 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@718989fa MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@69f080ad MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6568f998 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@45d4421d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@782fd504 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1537c744 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@37314843 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@50122012 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@569348e1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7db5b890 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@407b8435 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1282e98 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4db0ba1c MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1d91fa02 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1578fa9 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@414b2df5 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@9e30f9a MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1b30a54e MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@26275b46 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e9beef2 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2f15a964 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3111631d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2d70f312 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4c7d7430 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4ea1aa52 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@74123110 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ed0b4e3 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@79ab97fd MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3a9b41a0 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5fe46d52 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@448ade1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@21f9c6ea MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@418f0534 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3dfd7eaa MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c9beb51 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@133aacbe MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2aa5bd48 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7cfb8e98 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5f193335 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@19002b34 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec88aa1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e6748ae MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@28f154cc MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3030836d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6af78a48 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ed18d80 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4c24f3a2 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@783b3aa0 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2ec85a25 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2ec85a25 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4c176ff1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4c176ff1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4c176ff1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@27c53c32 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@68aec50 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6aff97d6 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6aff97d6 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1d60059f MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1d60059f MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1d60059f MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@134a8ead MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@134a8ead MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@427308f8 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@427308f8 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@54247647 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@54247647 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4975dda1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4975dda1 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@e0d1dc4 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@e0d1dc4 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5463f035 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@230232b0 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5ac044ef MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@53feeac9 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70091872 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@105db94d MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1d99ee1b MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3915e7c3 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@167a21b MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c0df4ab MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2e362407 MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@388be5fd MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@514377fc] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@514377fc) [was null] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@799f354a] into BootstrapContext; was [null] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@33bdd01] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@159ac15f] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@514377fc] MDC:[traceId=, spanId=]
2025-04-18 17:15:30 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@514377fc] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
	   name : MySQL
	version : 8.0.32
	  major : 8
	  minor : 0 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.3.0 (Revision: 805f872a57875f311cb82487efcfb070411a3fa0)
	  major : 8
	  minor : 3 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@93f15f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5034681f) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dfe5dd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fe05fff) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e017950) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d06801f) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@727956bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ffbf0ac) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ad5cffa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@237aa0c7) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b8ee69d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b400bd0) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@fceab5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@79445efb) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1592e540) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e2772a9) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4449b273) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fa18f87) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT)) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@686e7513 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@53feeac9` MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46188a89] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6f65a203] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name User MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.boot.model.internal.EntityBinder - Bind entity com.learning.user_service.entity.User on table tbl_user MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE') MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='id') MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:id] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.id MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property id MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:email] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for email MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.email MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property email MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='password') MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:password] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for password MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.password MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property password MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn() MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:role] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for role MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.role MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property role MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='username') MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.learning.user_service.entity.User:username] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for username MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: tbl_user.username MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.model.internal.PropertyBinder - Building property username MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.learning.user_service.entity MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding prePersist as PrePersist callback for entity com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [tbl_user] MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.internal.SessionFactoryImpl - Building session factory MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@44a13699, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\LT_Web\SpringBoot\learning-project\user-service\target\classes;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.10\spring-boot-starter-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.10\spring-boot-starter-aop-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.10\spring-boot-starter-jdbc-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jdbc\6.1.18\spring-jdbc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\A715-42G\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\A715-42G\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\A715-42G\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\A715-42G\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\A715-42G\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\A715-42G\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\A715-42G\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-jpa\3.3.10\spring-data-jpa-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\data\spring-data-commons\3.3.10\spring-data-commons-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-orm\6.1.18\spring-orm-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-context\6.1.18\spring-context-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-tx\6.1.18\spring-tx-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-beans\6.1.18\spring-beans-6.1.18.jar;C:\Users\A715-42G\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aspects\6.1.18\spring-aspects-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.10\spring-boot-starter-security-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.10\spring-boot-starter-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot\3.3.10\spring-boot-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.10\spring-boot-autoconfigure-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.10\spring-boot-starter-logging-3.3.10.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\A715-42G\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\A715-42G\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\A715-42G\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-aop\6.1.18\spring-aop-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-config\6.3.8\spring-security-config-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-core\6.3.8\spring-security-core-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-crypto\6.3.8\spring-security-crypto-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\security\spring-security-web\6.3.8\spring-security-web-6.3.8.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-expression\6.1.18\spring-expression-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.3.10\spring-boot-starter-validation-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\A715-42G\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.10\spring-boot-starter-web-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.10\spring-boot-starter-json-3.3.10.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.3\jackson-databind-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.3\jackson-annotations-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.3\jackson-core-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.3\jackson-datatype-jdk8-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.3\jackson-datatype-jsr310-2.17.3.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.3\jackson-module-parameter-names-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.10\spring-boot-starter-tomcat-3.3.10.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-web\6.1.18\spring-web-6.1.18.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-observation\1.13.12\micrometer-observation-1.13.12.jar;C:\Users\A715-42G\.m2\repository\io\micrometer\micrometer-commons\1.13.12\micrometer-commons-1.13.12.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-webmvc\6.1.18\spring-webmvc-6.1.18.jar;C:\Users\A715-42G\.m2\repository\com\mysql\mysql-connector-j\8.3.0\mysql-connector-j-8.3.0.jar;C:\Users\A715-42G\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\A715-42G\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\A715-42G\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-core\6.1.18\spring-core-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springframework\spring-jcl\6.1.18\spring-jcl-6.1.18.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.6.0\springdoc-openapi-starter-webmvc-ui-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.6.0\springdoc-openapi-starter-webmvc-api-2.6.0.jar;C:\Users\A715-42G\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.6.0\springdoc-openapi-starter-common-2.6.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.22\swagger-core-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\org\apache\commons\commons-lang3\3.14.0\commons-lang3-3.14.0.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.22\swagger-annotations-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.22\swagger-models-jakarta-2.2.22.jar;C:\Users\A715-42G\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.17.3\jackson-dataformat-yaml-2.17.3.jar;C:\Users\A715-42G\.m2\repository\org\webjars\swagger-ui\5.17.14\swagger-ui-5.17.14.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct\1.5.5.Final\mapstruct-1.5.5.Final.jar;C:\Users\A715-42G\.m2\repository\org\mapstruct\mapstruct-processor\1.5.5.Final\mapstruct-processor-1.5.5.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Saigon, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=com.learning.user_service.UserServiceApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1253b822, com.sun.management.jmxremote=, jdk.debug=release, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\A715-42G, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Program Files\Java\jdk-17, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+9-LTS-190, user.name=A715-42G, spring.jmx.enabled=true, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\A715-42G\AppData\Local\Temp\, catalina.home=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.1723741037723578489, java.version=17.0.6, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\LT_Web\SpringBoot\learning-project, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13076, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\A715-42G\AppData\Local\Temp\tomcat.8013.1723741037723578489, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@127d2aee, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Document\xxx\apache-maven-3.9.1\bin;C:\Program Files (x86)\Dev-Cpp\MinGW64\bin;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk-17\bin;C:\Program Files\nodejs\;C:\XamPP\php;D:\LT_Web\SpringBoot\SpringBootCLI\spring-3.2.1\bin;D:\sqlite;C:\Program Files\dotnet\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Document\Java\Maven\apache-maven-3.9.9\bin;D:\Document\Java\Maven\apache-maven-3.9.9\bin;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\A715-42G\AppData\Local\Programs\Python\Python310\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\A715-42G\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.3.7-hotspot\bin;C:\Users\A715-42G\AppData\Local\Microsoft\WindowsApps;C:\Users\A715-42G\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Git\bin;D:\Document\HQT_ATCSDL\MongoDB\mongosh-1.8.2-win32-x64\bin;C:\Users\A715-42G\AppData\Roaming\npm;C:\XamPP\php;C:\Users\A715-42G\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.6+9-LTS-190, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0, LOGGED_APPLICATION_NAME=[user-service] } MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {} MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@23d23d98] under count; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2435c6ae] under every; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@574f9e36] under any; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@438c0aaf] under sinh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7577589] under cosh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37b80ec7] under tanh; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cb58e8b] under pi; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f4f2cc0] under log; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@35744f8] under position; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@8bde368] under overlay; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@9a07409] under trim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@477bea57] under cast; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5dc7391e] under collate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@782dc5] under extract; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@67a3dd86] under ifnull; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@67a3394c] under pad; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4f98ac31] under str; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@79631db0] under format; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@565efd7d] under timestampadd; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@42474b18] under timestampdiff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5af56240] under current_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2314cd97] under current_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51dbed72] under current_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@64e89bb2] under local_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15fe020d] under local_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10830d50] under local_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e3dc24f] under offset_datetime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ea8ff31] under instant; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5a35ae82] under sql; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f4f2cc0 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@612bb755] under lpad; prior registration was NamedSqmFunctionTemplate(lpad) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6ba226cd] under rpad; prior registration was NamedSqmFunctionTemplate(rpad) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62e99458] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@35744f8 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@14d298d6] under trunc; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64af5454] under bitand; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@94aeba1] under bitor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f6cde7e] under bitxor; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ff8e36d] under bitnot; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@116b0b32] under format; prior registration was org.hibernate.dialect.function.FormatFunction@79631db0 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@15fe020d MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@10830d50 MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4f22fd5d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4cb58e8b MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26d445e9] under chr; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e7f29d5] under sysdate; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6c4d0224] under listagg; prior registration was null MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - avg(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*}) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate() MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime() MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now() MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double pi MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Object sql MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate() MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1]) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... ) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048) MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead MDC:[traceId=, spanId=]
2025-04-18 17:15:31 [main] DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.learning.user_service.entity.User] is safe MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.learning.user_service.entity.User]: private accessor [email] MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.learning.user_service.entity.User) `staticFetchableList` generator MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User)] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User]
 |  +-BasicFetch [com.learning.user_service.entity.User.email]
 |  +-BasicFetch [com.learning.user_service.entity.User.password]
 |  +-BasicFetch [com.learning.user_service.entity.User.role]
 |  \-BasicFetch [com.learning.user_service.entity.User.username]
 MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.learning.user_service.entity.User MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update tbl_user set email=?,password=?,role=? where id=? MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from tbl_user where id=? MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration) MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46188a89] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5ab06829] MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.SQL - create table tbl_user (id bigint not null auto_increment, email varchar(255) not null, password varchar(100) not null, role enum ('ROLE_ADMIN','ROLE_USER') not null, username varchar(100) not null, primary key (id)) engine=InnoDB MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.SQL - alter table tbl_user drop index user_name_unique MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.SQL - alter table tbl_user add constraint user_name_unique unique (user_name) MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.SQL - alter table tbl_user drop index UKnpn1wf1yu1g5rjohbek375pp1 MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG org.hibernate.SQL - alter table tbl_user add constraint UKnpn1wf1yu1g5rjohbek375pp1 unique (email) MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32153bbe MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: fef2885c-5391-43d8-9950-c9e6e527b16a (<unnamed>) MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false] MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace) MDC:[traceId=, spanId=]
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy128.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:103)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:290)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:296)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.learning.user_service.UserServiceApplication.main(UserServiceApplication.java:12)
2025-04-18 17:15:32 [main] DEBUG o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider. MDC:[traceId=, spanId=]
2025-04-18 17:15:32 [main] DEBUG o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory. MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fc7a9e6 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@308519785 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.SQL - insert into tbl_user (email,password,role,username) values (?,?,?,?) MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Initializer list is empty MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3dd68d10 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.learning.user_service.entity.User]: [Ljava.lang.Object;@708f20f2 MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa, role=ROLE_ADMIN, id=1, email=daile2692003@gmail.com, username=daile269} MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - begin MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.t.internal.TransactionImpl - committing MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Dirty checking collections MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.internal.util.EntityPrinter - Listing entities: MDC:[traceId=, spanId=]
2025-04-18 17:16:18 [http-nio-8013-exec-7] DEBUG o.h.internal.util.EntityPrinter - com.learning.user_service.entity.User{password=$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa, role=ROLE_ADMIN, id=1, email=daile2692003@gmail.com, username=daile269} MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7830f006 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1999757284 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 53814101 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:26 [http-nio-8013-exec-9] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f05f0ab MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36224dce MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@2044247873 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 636080453 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-10] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19f7400e MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19758a83 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@175534258 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 2040094127 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:31 [http-nio-8013-exec-1] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@405341ce MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4da9eca4 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@17254789 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1142887459 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:42 [http-nio-8013-exec-2] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f6f3644 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7011b4c0 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@594881088 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 858240865 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:44 [http-nio-8013-exec-3] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@390aac6f MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32c8aa31 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1924898251 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1685668200 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-4] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a02cde9 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b3e5f17 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1325984744 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 763106897 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:46 [http-nio-8013-exec-5] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@25a3ffbd MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29bc0493 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@1715926511 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 1464955944 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:16:47 [http-nio-8013-exec-6] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6690aa0 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.learning.user_service.entity.User(2))] with identifierForTableGroup [com.learning.user_service.entity.User] for NavigablePath [com.learning.user_service.entity.User]  MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cc9aab2 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.learning.user_service.entity.User(2).username)  MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.learning.user_service.entity.User(2)]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).email]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).password]
 |  +-BasicFetch [com.learning.user_service.entity.User(2).role]
 |  \-BasicFetch [com.learning.user_service.entity.User(2).username]
 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.learning.user_service.entity.User(2)) {
          primaryTableReference : tbl_user as u1_0
        }
      }
    }
 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Initializer list:
	  com.learning.user_service.entity.User(2) -> EntityResultInitializer(com.learning.user_service.entity.User(2))@858997088 (SingleTableEntityPersister(com.learning.user_service.entity.User))
 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from tbl_user u1_0 where u1_0.username=? MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [0] - [1] MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Hydrated EntityKey (com.learning.user_service.entity.User(2)): 1 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Created new entity instance [com.learning.user_service.entity.User(2)#1] : 2056112223 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [1] - [daile2692003@gmail.com] MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [2] - [$2a$10$Q5TregLxbMV7Eho.hfeITe4EdZEibH3cyNSab/Zla3jqpfi9SlWLa] MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [3] - [ROLE_ADMIN] MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results - Extracted JDBC value [4] - [daile269] MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG o.h.orm.results.loading.entity - (EntityResultInitializer) Done materializing entityInstance : com.learning.user_service.entity.User(2)#1 MDC:[traceId=, spanId=]
2025-04-18 17:17:41 [http-nio-8013-exec-8] DEBUG org.hibernate.orm.results.loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@531cbe2f MDC:[traceId=, spanId=]
2025-04-18 17:18:45 [SpringApplicationShutdownHook] DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing MDC:[traceId=, spanId=]
2025-04-18 17:18:45 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@c32ae25] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5ab06829] MDC:[traceId=, spanId=]
2025-04-18 17:18:45 [SpringApplicationShutdownHook] DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
2025-04-18 17:18:45 [SpringApplicationShutdownHook] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries MDC:[traceId=, spanId=]
