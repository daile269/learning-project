2025-05-07 09:54:52 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 09:54:52 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 09:54:52 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 09:56:08 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 09:56:08 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 09:56:08 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 09:56:55 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 09:56:55 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:56:55 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 09:57:40 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:57:40 [http-nio-8012-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:57:40 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:57:40 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error MDC:[traceId=, spanId=]
2025-05-07 09:57:40 [http-nio-8012-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:58:10 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:10 [http-nio-8012-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:58:10 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:25 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:25 [http-nio-8012-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:58:25 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:26 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:26 [http-nio-8012-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:58:26 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:28 [http-nio-8012-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:28 [http-nio-8012-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:58:28 [http-nio-8012-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:52 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:58:52 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:58:52 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:59:27 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 09:59:27 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 09:59:27 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 09:59:53 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 09:59:53 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 09:59:53 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:00:00 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:00:00 [http-nio-8012-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:00:00 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:00:59 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:00:59 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:00:59 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:01:14 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:01:14 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:01:14 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:01:42 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:01:42 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:01:43 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:01:49 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:01:49 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:01:49 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:03:03 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:03:03 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:03:03 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:03:14 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:03:14 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:03:14 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:05:11 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:05:11 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:05:12 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:05:19 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:05:19 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:05:19 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:05:53 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:05:53 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:05:53 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:06:01 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:06:01 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:06:01 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:07:46 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:07:46 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:07:46 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:07:49 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:07:49 [http-nio-8012-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:07:49 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:07:59 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:07:59 [http-nio-8012-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:07:59 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:08:11 [http-nio-8012-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:08:11 [http-nio-8012-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:08:11 [http-nio-8012-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:09:05 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:09:05 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:09:06 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:09:08 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:09:09 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:09:09 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:11:35 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:11:35 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:11:36 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:11:40 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:11:40 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:11:40 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:12:02 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:12:02 [http-nio-8012-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:12:15 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:12:15 [http-nio-8012-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:12:15 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:12:24 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:12:24 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:12:33 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:12:33 [http-nio-8012-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:12:33 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:12:45 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:12:45 [http-nio-8012-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:12:45 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh-token MDC:[traceId=, spanId=]
2025-05-07 10:12:56 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:12:56 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:14:17 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:14:17 [http-nio-8012-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:14:17 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:14:26 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:14:26 [http-nio-8012-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:14:26 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:14:30 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:14:30 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:14:30 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:15:39 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:15:39 [http-nio-8012-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:15:39 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:16:15 [http-nio-8012-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:16:15 [http-nio-8012-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:16:15 [http-nio-8012-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:18:06 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:18:06 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:18:06 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:18:19 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:19 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:21 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:21 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:21 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:21 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:22 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:22 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:23 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:18:23 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:19:11 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:19:11 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:19:11 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:19:20 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:19:21 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:19:23 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:19:23 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:19:24 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:19:24 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:20:08 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:20:08 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:20:50 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:20:50 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:20:50 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:20:59 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:21:00 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:21:11 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:21:11 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:21:11 [http-nio-8012-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:21:25 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:21:25 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:21:42 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:21:42 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:21:42 [http-nio-8012-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:23:32 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:23:32 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:23:32 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:23:38 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:23:38 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:23:38 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:23:52 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:23:53 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:23:53 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:23:53 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@6e4adaa2 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:24:09 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:24:09 [http-nio-8012-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:24:09 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:24:23 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:24:23 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:24:23 [http-nio-8012-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:24:23 [http-nio-8012-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@6e4adaa2 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:25:10 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:25:10 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:25:10 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:25:13 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:25:14 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:25:14 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:25:14 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@1b13441d and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:25:17 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:25:17 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:25:17 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:25:17 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@1b13441d and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:25:39 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:25:39 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:25:39 [http-nio-8012-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:25:39 [http-nio-8012-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@1b13441d and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:28:41 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:28:41 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:28:42 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:28:50 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:28:51 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:28:51 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:28:51 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@5818d79a and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:30:26 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:30:26 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:30:27 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:30:35 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:30:35 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:30:35 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:30:35 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@1b212e2b and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:31:37 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:31:37 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:31:37 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:31:42 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:31:42 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:31:42 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:31:42 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:32:00 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:32:00 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:32:00 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:32:00 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:32:05 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:32:05 [http-nio-8012-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:32:05 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:32:17 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:32:17 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:32:17 [http-nio-8012-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:32:17 [http-nio-8012-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@2cbabab3 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:37:28 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:37:28 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:37:28 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:37:42 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:37:42 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:37:42 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:39:52 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:39:52 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:39:52 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:40:34 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:40:34 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:40:35 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:40:38 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:40:38 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:40:38 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:40:46 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:40:46 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:40:46 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:40:46 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@6fdcaf5b and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('ROLE_ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:41:01 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:01 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:01 [http-nio-8012-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:01 [http-nio-8012-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:20 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:41:20 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:41:21 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:41:26 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:26 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:26 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:26 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:29 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:29 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:29 [http-nio-8012-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:29 [http-nio-8012-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:50 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:41:50 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:41:50 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:41:54 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:55 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:55 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:55 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:58 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:58 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:41:58 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:41:58 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:42:19 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:42:19 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:42:19 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:42:22 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:42:23 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:42:23 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:42:23 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:42:39 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:42:39 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:42:39 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:42:42 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:42:43 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:42:43 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:42:43 [http-nio-8012-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@1533685c and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:42:54 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:42:54 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:42:54 [http-nio-8012-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:42:54 [http-nio-8012-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@1533685c and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasAuthority('ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:43:49 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:43:49 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:43:49 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:43:58 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:43:58 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:43:58 [http-nio-8012-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:43:58 [http-nio-8012-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:44:03 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:44:03 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:44:03 [http-nio-8012-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:44:24 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:44:24 [http-nio-8012-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:44:24 [http-nio-8012-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login MDC:[traceId=, spanId=]
2025-05-07 10:44:31 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:44:31 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:44:31 [http-nio-8012-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:44:31 [http-nio-8012-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@5a59e7a0 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:44:33 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:44:33 [http-nio-8012-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:44:33 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:44:33 [http-nio-8012-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@5a59e7a0 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:46:14 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:46:14 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:46:15 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:46:33 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:46:33 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:46:33 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:46:36 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:46:36 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:46:36 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:46:36 [http-nio-8012-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@27750c97 and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('ADMIN')] MDC:[traceId=, spanId=]
2025-05-07 10:46:42 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:46:42 [http-nio-8012-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:46:42 [http-nio-8012-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:47:56 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider MDC:[traceId=, spanId=]
2025-05-07 10:47:56 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. MDC:[traceId=, spanId=]
2025-05-07 10:47:57 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter MDC:[traceId=, spanId=]
2025-05-07 10:48:14 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:48:14 [http-nio-8012-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:48:14 [http-nio-8012-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:48:17 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:48:17 [http-nio-8012-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:48:17 [http-nio-8012-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:48:31 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:48:31 [http-nio-8012-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:48:31 [http-nio-8012-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:48:33 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:48:33 [http-nio-8012-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error MDC:[traceId=, spanId=]
2025-05-07 10:48:33 [http-nio-8012-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext MDC:[traceId=, spanId=]
2025-05-07 10:48:44 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:48:45 [http-nio-8012-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/test MDC:[traceId=, spanId=]
2025-05-07 10:48:45 [http-nio-8012-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] MDC:[traceId=, spanId=]
2025-05-07 10:48:45 [http-nio-8012-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Failed to authorize ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.learing.auth_service.controller.AuthController.tesst(); target is of class [com.learing.auth_service.controller.AuthController] with authorization manager org.springframework.security.authorization.method.PreAuthorizeAuthorizationManager@10fe0f1d and decision ExpressionAuthorizationDecision [granted=false, expressionAttribute=hasRole('ADMIN')] MDC:[traceId=, spanId=]
